# This file has been modified, but was initially created automatically with `myst init --gh-pages` ü™Ñ üíö
# Ensure your GitHub Pages settings for this repository are set to deploy with **GitHub Actions**.
# ... 

name: Build and Deploy Website and PDF
on:
  push:
    # Runs on pushes targeting the default branch
    branches: [main]
env:
  # `BASE_URL` determines the website is served from, including CSS & JS assets
  # You may need to change this to `BASE_URL: ''`
  BASE_URL: /${{ github.event.repository.name }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - uses: typst-community/setup-typst@v4

      # install mystmd
      - name: Install MyST Markdown with npm
        run: npm install -g mystmd

      # set and show date to date of last build 
      # - name: Add current date to myst.yml
      #   shell: bash
      #   run: |
      #     BUILD_DATE="$(date +'%Y-%m-%d')"
      #     sed -i "s|\${BUILD_DATE}|${BUILD_DATE}|g" myst.yml
      #     echo "myst.yml:"
      #     grep -nE '^\s*date:' myst.yml


      
      - name: Install Typst
        run: |
          typst --version


      # Build PDFs step with error capture
      - name: Build PDF with Typst
        run: |
          set -euo pipefail
          myst build --typst 2> build_stderr.log || status=$?
          : "${status:=0}"
          if [ -s build_stderr.log ]; then
            echo "### Build stderr" >> $GITHUB_STEP_SUMMARY
            cat build_stderr.log >> $GITHUB_STEP_SUMMARY
          fi
          # Fail only if stderr contains ‚Äúerror‚Äù
          if grep -qiE '\berror\b' build_stderr.log || [ "$status" -ne 0 ]; then
            exit 1
          fi
          echo "PDF build completed successfully."

          
      # Commit exports only if build succeeded
      # - name: Commit and push exports
      #   if: success()
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git config --global --add safe.directory "$GITHUB_WORKSPACE"

      #     git add exports/book.pdf
      #     if ! git diff --cached --quiet; then
      #       timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
      #       git commit -m "Update exports folder [Typst] (${timestamp})"
      #       git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
      #       echo "Exports committed and pushed"
      #     else
      #       echo "No changes to commit"
      #     fi

      # 

      # build the site 
      - name: Build HTML Assets
        run: myst build --html

        
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_build/html'
      
      # deploy the GH page
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

    
